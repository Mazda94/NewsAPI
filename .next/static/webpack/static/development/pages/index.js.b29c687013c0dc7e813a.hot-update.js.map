{"version":3,"file":"static/webpack/static/development/pages/index.js.b29c687013c0dc7e813a.hot-update.js","sources":["webpack:///./pages/index.jsx"],"sourcesContent":["import { client, query } from '../helper'\nimport Layout from '../comps/layout'\nimport {\n    Row,\n    Col,\n    Nav,\n    Tab\n} from 'react-bootstrap'\nimport NewsCard from '../comps/newsCard'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst Page = ({ data, error }) => {\n    const { business } = useSelector(state => state)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (business.length === 0) {\n            dispatch({ type: 'SET_BUSINESS', payload: data.business })\n            dispatch({ type: 'SET_TECHNOLOGIES', payload: data.tech })\n        }\n    }, [])\n\n    if (error) {\n        return (\n            <Layout>\n                <p>Error while load data</p>\n            </Layout>\n        )\n    }\n\n    return (\n        <Layout>\n            <Tab.Container\n                id=\"left-tabs-example\"\n                defaultActiveKey=\"idn\">\n                <Row>\n                    <Col\n                        xs={12} md={4} xl={3}>\n                        <h3>Country</h3>\n                        <Nav\n                            variant=\"pills\"\n                            className=\"flex-column\">\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"idn\">Indonesia</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"sg\">Singapore</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"us\">United States</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Col>\n                    <Col xs={12} md={8} xl={9}>\n                        <Tab.Content>\n                            <Tab.Pane eventKey=\"idn\">\n                                <NewsCard\n                                    id={'idnBusiness'}\n                                    title=\"Indonesia Business\"\n                                    news={business.length > 0 ? business[0].idnBusiness : data.business[0].idnBusiness}\n                                />\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"sg\">\n                                <NewsCard\n                                    title=\"Singapore Business\"\n                                    news={business.length > 0 ? business[1].sgBusiness : data.business[1].sgBusiness}\n                                    id={'sgBusiness'}\n                                />\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"us\">\n                                <NewsCard\n                                    id={'usBusiness'}\n                                    news={business.length > 0 ? business[2].usBusiness : data.business[2].usBusiness}\n                                    title=\"United States Business\"\n                                />\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Col>\n                </Row>\n            </Tab.Container>\n        </Layout>\n    )\n}\n\nPage.getInitialProps = async ({ store }) => {\n    const { business } = store.getState()\n    if (business.length > 0) return {}\n\n    try {\n        const promises = {\n            idnBusiness: await client.get(query('id', 'business')),\n            sgBusiness: await client.get(query('sg', 'business')),\n            usBusiness: await client.get(query('us', 'business')),\n            idnTech: await client.get(query('id', 'technology')),\n            sgTech: await client.get(query('sg', 'technology')),\n            usTech: await client.get(query('us', 'technology')),\n        }\n        const {\n            idnBusiness,\n            sgBusiness,\n            usBusiness,\n            idnTech,\n            sgTech,\n            usTech\n        } = promises\n        const business = [\n            { idnBusiness: idnBusiness.data.articles.slice(0, 8) },\n            { sgBusiness: sgBusiness.data.articles.slice(0, 8) },\n            { usBusiness: usBusiness.data.articles.slice(0, 8) },\n        ]\n\n        const tech = [\n            { idnTech: idnTech.data.articles.slice(0, 8) },\n            { sgTech: sgTech.data.articles.slice(0, 8) },\n            { usTech: usTech.data.articles.slice(0, 8) },\n        ]\n        return {\n            data: {\n                business,\n                tech\n            }\n        }\n    } catch (error) {\n        return {\n            error: error.message\n        }\n    }\n}\n\nexport default Page"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AADA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AA9BA;AAiCA;AACA;AACA;AAFA;AADA;AACA;AAjCA;AAAA;AAAA;AAAA;AAwCA;AADA;AACA;AAxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA4CA;;;;A","sourceRoot":""}