{"version":3,"file":"static/webpack/static/development/pages/tech.js.c7d5c31d1d02e68657a8.hot-update.js","sources":["webpack:///./pages/tech.jsx"],"sourcesContent":["import { client, query } from '../helper'\nimport Layout from '../comps/layout'\nimport {\n    Row,\n    Col,\n    Nav,\n    Tab\n} from 'react-bootstrap'\nimport NewsCard from '../comps/newsCard'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst Page = ({ data, error }) => {\n\n    const { technologies } = useSelector(state => state)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (technologies.length === 0) {\n            dispatch({ type: 'SET_TECHNOLOGIES', payload: data })\n        }\n    }, [])\n\n    // if (error) {\n    //     return (\n    //         <Layout>\n    //             <p>Error while load data</p>\n    //         </Layout>\n    //     )\n    // }\n\n    return (\n        <Layout>\n            <Tab.Container\n                id=\"left-tabs-example\"\n                defaultActiveKey=\"idn\">\n                <Row>\n                    <Col\n                        xs={12} md={4} xl={3}>\n                        <h3>Country</h3>\n                        <Nav\n                            variant=\"pills\"\n                            className=\"flex-column\">\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"idn\">Indonesia</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"sg\">Singapore</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"us\">United States</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Col>\n                    <Col xs={12} md={8} xl={9}>\n                        <Tab.Content>\n                            <Tab.Pane eventKey=\"idn\">\n                                <NewsCard\n                                    title=\"Indonesia Tech\"\n                                    news={technologies.length > 0 ? technologies[0].idnTech : data[0].idnTech}\n                                />\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"sg\">\n                                <NewsCard\n                                    title=\"Singapore Tech\"\n                                    news={technologies.length > 0 ? technologies[1].sgTech : data[1].sgTech}\n                                />\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"us\">\n                                <NewsCard\n                                    news={technologies.length > 0 ? technologies[2].usTech : data[2].usTech}\n                                    title=\"United States Tech\"\n                                />\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Col>\n                </Row>\n            </Tab.Container>\n        </Layout>\n    )\n}\n\n// Page.getInitialProps = async ({ store }) => {\n//     const { technologies } = store.getState();\n//     if (technologies.length) return {}\n\n//     try {\n//         const promises = {\n//             idnTech: await client.get(query('id', 'technology')),\n//             sgTech: await client.get(query('sg', 'technology')),\n//             usTech: await client.get(query('us', 'technology')),\n//         }\n//         const { idnTech, sgTech, usTech } = promises\n//         const payload = [\n//             { idnTech: idnTech.data.articles.slice(0, 8) },\n//             { sgTech: sgTech.data.articles.slice(0, 8) },\n//             { usTech: usTech.data.articles.slice(0, 8) },\n//         ]\n//         store.dispatch({ type: 'SET_TECHNOLOGIES', payload })\n//         return {\n//             data: payload\n//         }\n//     } catch (error) {\n//         return {\n//             error: error.message\n//         }\n//     }\n// }\n\nexport default Page"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAFA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}